{"version":3,"sources":["src/components/Root.tsx","src/components/Text.tsx","src/components/Paragraph.tsx","src/components/Blockquote/Grid.tsx","src/components/Blockquote/index.tsx","src/components/Delete.tsx","src/components/Link/Button.tsx","src/components/Link/index.tsx","src/components/Image/Image.tsx","src/components/Image/index.tsx","src/components/Table/Cards.tsx","src/components/Table/Tables.tsx","src/components/Table/Pills.tsx","src/components/Table/Modal.tsx","src/components/Table/index.tsx","src/components/List/ListGroup.tsx","src/components/List/Navi.tsx","src/components/List/Foot.tsx","src/components/List/Drop.tsx","src/components/List/index.tsx","src/components/ListItem.tsx","src/components/Heading.tsx","src/components/Code/Code.tsx","src/components/InlineCode.tsx","src/components/Math.tsx","src/components/InlineMath.tsx","src/Mdmd.tsx","src/utils.ts","src/index.ts","docs/serviceWorker.ts","docs/Demo.tsx","docs/index.tsx","docs/pages/About.md","docs/pages/Basic.md","docs/pages/Component.md","docs/pages/Container.md","docs/pages/Content.md","docs/pages/Grid.md","docs/pages/Help.md","docs/pages/How.md","docs/pages/Test.md"],"names":["Root","children","style","padding","props","Text","className","color","Paragraph","Grid","grid","renderGrid","useCallback","arr","Array","every","c","key","match","isBlock","map","i","length","useMemo","Blockquote","getGrid","some","blockquote","tag","mb","Delete","Button","level","href","onClick","useState","isOpened","setIsOpened","toggle","state","outline","hoverText","slice","domElement","placement","Link","social","getLevel","window","open","ImageView","src","alt","position","hover","overlay","fontSize","Image","icon","Cards","columns","rows","argments","cards","column","row","argment","toHead","text","r","join","styles","textAlign","margin","borderRadius","boxShadow","Animation","reveal","type","chart","charAt","toUpperCase","getType","card","label","waves","j","Tables","maxHeight","bordered","paging","searching","scrollX","scrollY","striped","small","indexProps","data","tableState","Pills","isPill","tab","setTab","border","link","to","active","e","num","preventDefault","togglePills","l","activeItem","tabId","Modal","modalNum","setModalNum","replace","inline","noClickableBodyWithoutBackdrop","overflowScroll","fullHeight","isOpen","Table","columnAlignment","undefined","heads","getarr","filter","v","bodys","gettrs","h","getths","th","getcol","b","getrow","keys","getkey","getIsX","ListGroup","Navi","Children","toArray","setIsOpen","toggleCollapse","p","expand","fixed","dark","scrolling","transparent","getLink","getText","id","navbar","left","getArray","_","location","Foot","maxWidth","right","marginLeft","marginRight","bottom","overflow","fluid","Drop","caret","basic","List","getAnyCh","getAnyGr","ListItem","Heading","Tag","require","atomOneLight","atomOneDark","Light","Code","value","language","onDoubleClick","navigator","clipboard","writeText","customStyle","display","verticalAlign","PreTag","useInlineStyles","showLineNumbers","InlineCode","MathJax","Math","Node","formula","InlineMath","renderersKey","Object","Renderers","Mdmd","React","forwardRef","ref","md","path","source","nowSource","setSource","useEffect","fetch","then","String","options","assign","renderers","Renderer","toLowerCase","els","concat","el","field","sort","width","k","g","n","depth","child","is_1","is_2","Boolean","hostname","pagesKey","Pages","backgroundImage","backgroundColor","backgroundPosition","backgroundSize","setColor","page","setPage","Demo","leftRef","useRef","aceEditorRef","separatorXRef","useGrid","lg","res","setAceValue","aceValue","isChanged","setIsChanged","interval","setInterval","clearInterval","setWidth","current","clientWidth","setTimeout","editor","resize","separatorMouseMove","newwidth","clientX","height","transition","transform","WIDTH","iconStyle","top","sepaStyle","stateMdmd","root","stateAce","onChange","editorProps","$blockScrolling","name","mode","theme","onMouseDown","onMouseMove","onMouseUp","flexDirection","innerWidth","defaultProps","RootCustom","App","exact","styleRoot","component","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.03f5e995.chunk.js","sourcesContent":["import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nimport {MDBContainer} from 'mdbreact';\r\nexport const Root:FC<BaseProps> = ({\r\n        children, style={padding:\"0 0 0 0\"}, ...props\r\n}) => {\r\n    return <MDBContainer style={style} {...props}>{children}</MDBContainer>;\r\n};\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\n\r\nexport const Text:FC<BaseProps> = ({\r\n        children, className='', color='', style={}\r\n    }) => {\r\n    className = (color?`${color}-text `:'') + className\r\n    return <span {...{children, className, color, style}} />\r\n};\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\n\r\nexport const Paragraph:FC<BaseProps> = ({\r\n        children, className='', color='', style={padding:\"0 25px 0 25px\"},\r\n    }) => {\r\n    return <div {...{className,color,style}}>{children}</div>;\r\n};\r\n","import React, {FC, useCallback, useMemo} from 'react';\r\nimport {MDBCol, MDBRow} from 'mdbreact';\r\n//import {BaseProps} from '../../types'\r\n\r\nexport const Grid:FC<any> = ({grid=null}) => {\r\n    const isBlock =(c:any)=> 0\r\n         || c instanceof Array\r\n         || !!c?.key?.match('blockquote')\r\n         || !!c?.key?.match('paragraph')\r\n    const renderGrid =useCallback((arr:any)=>\r\n        (arr instanceof Array && arr.every(c=>isBlock(c)) )\r\n          ? <MDBRow>\r\n                {arr.map((c,i)=>\r\n                    <MDBCol key={`${i}-${c.length}`}>\r\n                    {(c instanceof Array)\r\n                        ? renderGrid(c)\r\n                        : c\r\n                    }</MDBCol>\r\n                )}\r\n                </MDBRow>\r\n          : arr, [])\r\n    return useMemo(()=>renderGrid(grid), [renderGrid, grid])\r\n};\r\n/* props- children : [blockquote, ...]\r\n> if depth = 0 (no \\n)\r\n    props.children\r\n      - c   (key=text)\r\n        .props.children\r\n          - c (key=None)\r\n> if depth = 0 (include \\n)\r\n> if depth = 1 (include \\n)\r\n    props.children\r\n      - c (key=blockquote)\r\n        .props.children\r\n          - c (key=paragraph)\r\n            .props.children\r\n              - c (key=text)\r\n              - c (key=text)...\r\n>if depth=1\r\n    //bind depth=0\r\n>?\r\n    props.children\r\n      - c (key=blockquote)\r\n        .prosp.children\r\n          - c (key=paragraph)\r\n          - c\r\n            .props.children\r\n              - c (key=text)\r\n              - c\r\n              - c ...\r\n*/\r\n","import React, {FC, useMemo} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {getGrid} from '../../utils';\r\nimport {Grid} from './Grid';\r\nimport {MDBTypography,MDBBox} from 'mdbreact';\r\nexport const Blockquote:FC<BaseProps> = ({children, className='', color='', style={}}) => {\r\n    const grid = useMemo(()=>\r\n        getGrid(children as React.ReactElement)\r\n    ,[children])\r\n    if ( grid instanceof Array && grid.some((c:any)=>(c instanceof Array)) )\r\n        return <Grid {...{className, color, style, grid}} />\r\n    return  (\r\n        <MDBTypography blockquote>\r\n            <MDBBox tag=\"div\" mb={0}>{grid}</MDBBox>\r\n        </MDBTypography>\r\n    )\r\n};\r\n\r\n/*props\r\n  - children : [blockquote, ]\r\n\r\n>if depth = 0 (no \\n)\r\nprops.children\r\n  - child   (key=text)\r\n    .props.children\r\n      - child (key=None)\r\n\r\n>if depth = 0 (include \\n)\r\n\r\n>>if depth = 1 (include \\n)\r\nprops.children\r\n  - child (key=blockquote)\r\n    .props.children\r\n      - child (key=paragraph)\r\n        .props.children\r\n          - child (key=text)\r\n          - child (key=text)...\r\n\r\n>>if depth=1\r\n>  //bind depth=0\r\n>>?\r\nprops.children\r\n  - child (key=blockquote)\r\n    .prosp.children\r\n      - child (key=paragraph)\r\n      - child\r\n        .props.children\r\n          - child (key=text)\r\n          - child\r\n          - child ...\r\n*/\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nimport {MDBBadge} from 'mdbreact';\r\nexport const Delete:FC<BaseProps> = ({\r\n        children, className=\"\", color=\"\", style={}\r\n    }) => {\r\n    const colors = [\"default\",\"primary\",\"success\",\"info\",\"warning\",\"danger\",\"light\",\"dark\"]\r\n    color = colors.some(c=>c===color) ? color :\"danger\"\r\n    return <MDBBadge {...{className,color,style}}>×{children}</MDBBadge>;\r\n};\r\n","import React, {FC,useState,useCallback} from 'react';\r\nimport {ButtonProps, buttonColor} from '../../types';\r\nimport {MDBBadge, MDBBtn, MDBTooltip} from 'mdbreact'\r\n\r\nexport const Button:FC<ButtonProps> = ({\r\n        level=1,/*social='',*/href='',onClick=null,\r\n        children, className='', color='black',style={}\r\n    }) => {\r\n    const [isOpened, setIsOpened] = useState(false);\r\n    const toggle = useCallback(() => {\r\n        setIsOpened(true);\r\n        onClick && onClick();\r\n    }, [onClick])\r\n    const state = { onClick:toggle, level, className, style,...(level===3&&{outline:true}), }\r\n    const hoverText = href.length>30? href.slice(0, 30)+\"...\":href\r\n    const colors = [\"default\",\"primary\",\"success\",\"info\",\"warning\",\"danger\",\"light\",\"dark\"]\r\n    return (\r\n        <MDBTooltip domElement tag=\"span\" placement=\"bottom\">\r\n            <span>\r\n                {level===1\r\n                    ? <MDBBadge {...{...state,children,color:color in colors?color:\"dark\"}}/>\r\n                    : <MDBBtn   {...{...state,children,color:color as buttonColor}}/>}\r\n            </span>\r\n            <span>{isOpened?'Opened':hoverText}</span>\r\n        </MDBTooltip>\r\n    ) //TODO (social?{social}:{color}\r\n}\r\n","import React, {ReactChild as RC, FC, useCallback} from 'react';\r\nimport {LinkProps} from '../../types';\r\nimport {getLevel} from '../../utils'\r\nimport {Button} from './Button'\r\n\r\nexport const Link:FC<LinkProps> = ({\r\n        social='', href='',\r\n        children, className='', color='', style={},\r\n    }) => {\r\n    const level = getLevel(children as RC)\r\n    const onClick=useCallback(()=>window.open(href, '_blank', 'noopener noreferrer'),[href])\r\n    return (level>0)\r\n    ? <Button {...{level,social,href,onClick,children,className,color,style}} />\r\n    : <span {...{onClick,className,style}}><u>{children}</u></span>;\r\n};\r\n/* props\r\n  - children\r\n  - href \"/docs\"\r\n*/\r\n","import React, {FC} from 'react';\r\nimport {ImageProps} from '../../types';\r\nimport {MDBView, MDBMask} from 'mdbreact';\r\n\r\nexport const ImageView:FC<ImageProps> = ({\r\n    src='',alt='',/*active=false,color='',*/className='',style={position:\"absolute\"}\r\n}) => {\r\n    className = `img-fluid${' '+className||''}`\r\n    //color = `${color}-text` //TODO\r\n    return (\r\n        <MDBView hover>\r\n            <img alt=\"\" {...{src,alt,className,style}}/>\r\n            <MDBMask className=\"flex-center\" overlay=\"white-light\">\r\n                <p className=\"black-text\" style={{fontSize:\"1em\"}}>{alt}</p>\r\n            </MDBMask>\r\n        </MDBView>\r\n    )\r\n};\r\n/* props\r\n  - alt:\"\"\r\n  - children\r\n  - className: \"\"\r\n  - src: \"\"\r\n*/\r\n","import React, {ReactChild as RC, FC} from 'react';\r\nimport {getLevel} from '../../utils';\r\nimport {ImageProps} from '../../types';\r\nimport {MDBIcon} from 'mdbreact';\r\nimport {ImageView} from './Image';\r\n\r\nexport const Image:FC<ImageProps> = ({children, alt='', ...props}) => {\r\n    if (!children && alt.slice(0,1).match(':'))\r\n        return <MDBIcon icon={alt.slice(1)}/>\r\n    const level = getLevel(children as RC)//is_3?3:is_2?2:is_1?1:0\r\n    //if (src.match('https://youtube.com')) //TODO\r\n    //    return <Embed {...state}/>\r\n    return <ImageView {...props} {...{alt,level,children}}/>\r\n}\r\n","import React, {FC,CSSProperties,useCallback,useMemo} from 'react';\r\nimport {CardsProps} from '../../types';\r\nimport {MDBRow,MDBCol,MDBCard,MDBCardBody,MDBCardImage,\r\n        MDBCardTitle,MDBCardText,MDBAnimation} from 'mdbreact';\r\n\r\n\r\nexport const Cards :FC<CardsProps> = ({columns, rows, argments}) => {\r\n    const cards = useMemo(()=>columns.map((column:any,i:number)=>(\r\n        {column, rows:rows.map((row:any)=>row[''+i]), argment:argments[i]}\r\n    )), [columns, rows, argments])\r\n    const toHead =useCallback((row:any)=>{\r\n        const text = row && row.map((r:any)=>r.props.children).join('')\r\n        return (text&&text[0]===\"#\")?text.slice(1):null\r\n    }, [])\r\n    const styles = useMemo<CSSProperties[]>(()=>[\r\n        {textAlign:\"center\", margin:\"25px auto\"},\r\n        {borderRadius:\"5px\"},\r\n        {margin:\"0 auto\", borderRadius:\"5px\", boxShadow:\"0 10 25 rgba(0,0,0,0.25)\"},\r\n    ], [])\r\n    const Animation =useCallback((props:any) => {\r\n        const getUpper=(chart:string)=>chart.charAt(0).toUpperCase()+chart.slice(1)\r\n        const getType=(argment:string)=>argment?`fadeIn${getUpper(argment==='center'?'up':argment)}`:\"swing\"\r\n        return props.argment\r\n        ? <MDBAnimation reveal type={getType(props.argment) as 'fadeInUp'|\"swing\"}>\r\n            {props.children}\r\n          </MDBAnimation>\r\n        : props.children\r\n    }, [])\r\n    return (\r\n        <MDBRow>\r\n            {cards&&cards.map((card:any,i:number)=>\r\n                <MDBCol key={i} style={styles[0]}>\r\n                    <Animation argment={card.argment}>\r\n                        <MDBCard style={styles[1]}>\r\n                            <MDBCardImage style={styles[2]} className=\"img-fluid\"\r\n                                src={card.column.label[0].props.src} waves />\r\n                            <MDBCardBody>\r\n                                <MDBCardTitle>{card.column.label[0].props.alt}</MDBCardTitle>\r\n                                {card.rows && card.rows.map((row:any,j:number)=>\r\n                                    <MDBCardText key={j}>{toHead(row)||row}</MDBCardText>\r\n                                )}\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </Animation>\r\n                </MDBCol>\r\n            )}\r\n        </MDBRow>\r\n    )\r\n}\r\n","import React, {FC} from 'react';\r\nimport {TableProps} from '../../types'\r\nimport { MDBDataTable} from 'mdbreact';\r\nexport const Tables:FC<TableProps> = ({\r\n        maxHeight=\"300px\",\r\n        bordered =false ,\r\n        paging   =true , //pagination of Table and select data num\r\n        searching=true , //able to search for table\r\n        scrollX  =false, //able to scroll if overflow-x\r\n        scrollY  =false, //able to scroll if overflow-y\r\n        //sorting  :true ,//error TODO\r\n        striped  =true ,\r\n        small    =true ,\r\n        indexProps={}, data={},\r\n        children, className='', color='', style={}\r\n    }) => {\r\n    const tableState = {bordered,maxHeight,paging,searching,scrollX,scrollY,small,striped}; //sorting TODO\r\n    const state = {data,className,color,style,...tableState}\r\n    return <MDBDataTable {...state} />\r\n}\r\n","import React, {FC,Fragment,useState} from 'react';\r\nimport {TablesProps} from '../../types';\r\nimport {MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\n\r\nexport const Pills:FC<TablesProps> =({\r\n        isPill=true, /*color, style,*/ columns=[], rows=[],\r\n        className='', //children, color='', style={}\r\n    }) => {\r\n    const [tab, setTab] = useState(0)\r\n    //const getarr =arr=>arr?arr instanceof Array?arr:[arr]:[]\r\n    //const isPill = columns.every( col=>col.label.every(c=>getAnyChild(c.props,'emphasis').length) )\r\n    const cards = columns.map((column,i)=>(\r\n        {column, rows:rows.map(row=>row[''+i])}\r\n    ))\r\n    const togglePills =(e:any, num:number) => {\r\n        e.preventDefault(); //?\r\n        if (tab!==num)\r\n            setTab(num);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <MDBNav style={{border:\"none\"}}\r\n                className={className+` mt-5 nav-${isPill?'pills':'tabs'}`}>\r\n                {cards && cards.map((card,i)=>\r\n                <Fragment key={i}>\r\n                    <MDBNavItem>\r\n                       <MDBNavLink link to=\"#\" active={tab===(i)}\r\n                          onClick={(e:any)=>togglePills(e,i)} >\r\n                          {card.column.label.map((l:any)=>l.props.children)}\r\n                        </MDBNavLink>\r\n                    </MDBNavItem>\r\n                </Fragment>\r\n                )}\r\n            </MDBNav>\r\n            <MDBTabContent activeItem={\"\"+tab}>\r\n                {cards && cards.map((card,i)=>\r\n                <Fragment key={i}>\r\n                    <MDBTabPane tabId={i+\"\"}>\r\n                        <p> {card.rows} </p>\r\n                    </MDBTabPane>\r\n                </Fragment>\r\n                )}\r\n          </MDBTabContent>\r\n        </Fragment>\r\n    );\r\n}\r\n","import React, {FC, Fragment, useState} from 'react';\r\nimport {buttonColor, TablesProps, } from '../../types';\r\nimport { MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\n\r\nexport const Modal:FC<TablesProps> = ({\r\n        columns=[], rows=[], argments=[],\r\n        children, className='', color='dark', style={}\r\n    }) => {\r\n    const [modalNum, setModalNum] = useState<number>(0)\r\n    const cards = columns.map((column,i)=>(\r\n        {column, rows:rows.map(row=>row[''+i]), argment:argments[i]}\r\n    ))\r\n    color = color.replace('-color','')\r\n    return (\r\n        <Fragment>\r\n        {cards.map((card,i)=>\r\n            <Fragment key={i}>\r\n                <MDBBtn {...{className, color:color as buttonColor, style}}\r\n                    onClick={()=>setModalNum((modalNum===i)?0:i)}>\r\n                    {card.column.label[0].props.children[0].props.children}</MDBBtn>\r\n                <MDBModal\r\n                    inline noClickableBodyWithoutBackdrop overflowScroll //?? TODO error if no\r\n                    fullHeight position=\"right\"\r\n                    isOpen={modalNum===i}\r\n                    toggle={()=>setModalNum(0)}>\r\n                    <MDBModalHeader toggle={()=>setModalNum(0)}>\r\n                        {card.column.label[0].props.children}\r\n                    </MDBModalHeader>\r\n                    <MDBModalBody> {card.rows} </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn {...{className, color:color as buttonColor, style}}\r\n                            onClick={()=>setModalNum(0)}>Close</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </Fragment>\r\n        )}\r\n    </Fragment>\r\n    )\r\n}\r\n","import React, {FC, useMemo} from 'react';\r\nimport {TableProps} from '../../types';\r\nimport {getarr,gettrs,getths,getcol,getrow,getkey,getIsX} from '../../utils'\r\nimport {Cards} from './Cards';\r\nimport {Tables} from './Tables';\r\nimport {Pills} from './Pills';\r\nimport {Modal} from './Modal';\r\n\r\nexport const Table:FC<TableProps> = ({\r\n        columnAlignment=undefined,\r\n        children, className='', color='', style={}, ...props\r\n    }) => {\r\n    const {columns, rows, keys} = useMemo(()=>{\r\n        const heads   = getarr(children).filter(v=>v.key.match(\"tableHead\"));\r\n        const bodys   = getarr(children).filter(v=>v.key.match(\"tableBody\"));\r\n        const columns = gettrs(heads).map(h=>getths(h)).map(th=>getcol(th))[0];\r\n        const rows    = gettrs(bodys).map(b=>getths(b)).map(th=>getrow(th));\r\n        const keys    = gettrs(heads).map(v=>getths(v)).map(th=>getkey(th))[0];\r\n        return {columns, rows, keys}\r\n    }, [children])\r\n    if ( keys.every(key=>key.match('image')) )\r\n        return <Cards {...{columns,rows,keys,className,color,style}} argments={columnAlignment}/>\r\n    if ( keys.every(key=>key.match('link')) )\r\n        return (getIsX(columns, 'delete'))\r\n            ? <Modal {...{columns, rows, keys, className, color, style}} argments={columnAlignment}/>\r\n            : <Pills {...{columns, rows, keys, className, color, style}} isPill={getIsX(columns, 'emphasis')?true:false}/>\r\n    return <Tables indexProps={props} data={ {columns,rows} }/>\r\n};\r\n","import React, {FC,useMemo} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {MDBListGroup} from 'mdbreact';\r\n\r\nexport const ListGroup:FC<BaseProps> = ({\r\n        children, className='', color='elegant', style={}\r\n    }) => {\r\n    return useMemo(()=>\r\n        <MDBListGroup {...{children, className, color, style:{margin:\"auto auto\",...style}}} color=\"light\"/>\r\n    , [children, className, color, style])\r\n\r\n};\r\n","/***\r\n  * REF : Full Page Intro with fixed, transparent Navbar↓\r\n  * https://mdbootstrap.com/docs/react/navigation/navbar/\r\n  * https://mdbootstrap.com/docs/react/navigation/compositions/\r\n  * https://mdbootstrap.com/previews/docs/latest/html/navigation/intro-fixed-transparent.html\r\n***/\r\nimport React, {FC, Children, useCallback, useState} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {getarr as getArray,getText,getLink} from '../../utils'\r\nimport {MDBNavbar,MDBNavbarBrand,MDBNavbarNav,MDBNavItem,MDBNavLink,MDBNavbarToggler,MDBCollapse} from \"mdbreact\";\r\nexport const Navi:FC<BaseProps> = ( {\r\n    className=\"\", color=\"elegant\", style={}, ...props\r\n}) => {\r\n    const children = Children.toArray(props.children)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const toggleCollapse = useCallback(()=>setIsOpen(p=>!p), [])\r\n    color = `${color}${color.match(\"-color\")?\"\":\"-color\"}`\r\n    return (\r\n        <MDBNavbar {...{color,className,style}}\r\n            expand=\"md\" fixed=\"top\" dark scrolling transparent>\r\n            <MDBNavbarBrand href={getLink((children as any)[0].props.children)}>\r\n                <strong className=\"white-text\">{getText((children as any)[0].props.children)}</strong>\r\n            </MDBNavbarBrand>\r\n            <MDBNavbarToggler onClick={toggleCollapse} />\r\n            <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\r\n                <MDBNavbarNav left>\r\n                {getArray(children).filter((_:any,i:number)=>i>0).map((c,i)=>\r\n                    <MDBNavItem key={i}\r\n                        active={window.location.href.match(getLink(c.props?.children))?true:false}\r\n                        onClick={()=>{window.location.href=getLink(c.props?.children)}}>\r\n                        <MDBNavLink  to=\"#\">{getText(c.props?.children)}</MDBNavLink>\r\n                    </MDBNavItem>\r\n                )}\r\n                </MDBNavbarNav>\r\n            </MDBCollapse>\r\n        </MDBNavbar>\r\n    );\r\n};\r\n","//https://mdbootstrap.com/docs/react/navigation/footer/\r\nimport React, {FC} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {getarr as getArray,getText,getLink} from '../../utils'\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nexport const Foot:FC<BaseProps> = ({\r\n        children, className='', color='', style={}\r\n    }) => {\r\n    className = 'footer-copyright text-center font-small py-3'+className;\r\n    style = { maxWidth:\"99vw\",left:\"50%\",right:\"50%\",marginLeft:\"-50vw\",marginRight:\"-50vw\",\r\n                    position:\"relative\",bottom:\"0\",overflow:\"hidden\",...style}\r\n    const state ={className,color,style}\r\n    return (\r\n        <MDBFooter {...state}>\r\n            <MDBContainer fluid>\r\n                <MDBRow>\r\n                    {getArray(children).map((c,i)=>\r\n                        <MDBCol key={i}\r\n                            onClick={()=>{window.location.href=getLink(c.props.children)}}>\r\n                                {getText(c.props.children)}\r\n                        </MDBCol>\r\n                    )}\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        </MDBFooter>\r\n    )\r\n};\r\n","/***\r\n  * REF\r\n  * https://mdbootstrap.com/docs/react/components/dropdowns/\r\n***/\r\nimport React, {FC} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {getarr as getArray,getText,getLink} from '../../utils'\r\nimport {MDBDropdown,MDBDropdownToggle,MDBDropdownMenu,MDBDropdownItem} from \"mdbreact\";\r\n\r\nexport const Drop:FC<BaseProps> = ({\r\n        children, className='', color='', style={}\r\n    }) => {\r\n    color = color.replace('-color','')\r\n    const state = {className,style}\r\n    return (\r\n        <MDBDropdown {...state}>\r\n            <MDBDropdownToggle caret color={color}>\r\n                {getText(getArray(children)[0]?.props?.children)}\r\n            </MDBDropdownToggle>\r\n            <MDBDropdownMenu basic>\r\n            {getArray(children).filter((_,i:number)=>i>0).map((c,i)=>\r\n                <MDBDropdownItem key={i}\r\n                    onClick={()=>{window.location.href=getLink(c.props?.children)}}>\r\n                    {getText(c.props?.children)||c.props?.children}</MDBDropdownItem>\r\n            )}\r\n            </MDBDropdownMenu>\r\n        </MDBDropdown>\r\n    )\r\n};\r\n","import React, {FC,useMemo} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {getarr, getAnyCh, getAnyGr} from '../../utils';\r\nimport {ListGroup} from './ListGroup';\r\nimport {Navi} from './Navi';\r\nimport {Foot} from './Foot';\r\nimport {Drop} from './Drop';\r\nexport const List:FC<BaseProps> = ({\r\n        children, className='', color='elegant', style={}\r\n    }) => {\r\n    const state = useMemo(()=>({\r\n        children,className,color,style\r\n    }),[children,className,color,style])\r\n    if( getarr( children ).every((c:any)=>getAnyCh(c.props?.children,'link').length ) ){\r\n        if ( getarr( children ).every(c=>getAnyGr(c.props?.children, 'link', 'strong').length) )\r\n            return <Foot {...state}/>\r\n        if ( getarr( children ).every(c=>getAnyGr(c.props?.children, 'link', 'emphasis').length) )\r\n            return <Navi {...state}/>\r\n        return <Drop {...state}/>\r\n    }\r\n    return <ListGroup>{children}</ListGroup>\r\n/***\r\n  * TODO : not used (migrate to table)\r\n  * if( children.every(c=>getAnyChild(c.props?.children, 'image').length ) )\r\n  *     return <Carousel {...state}/>\r\n  * if( children.map(c=>getAnyGrand(c.props?.children, 'link', 'emphasis')).filter(a=>a.length).length )\r\n  *     return <Pill {...state}/>\r\n  * if( children.map(c=>getAnyGrand(c.props?.children, 'link', 'strong')).filter(a=>a.length).length )\r\n  *   return <Tabs {...state}/>\r\n***/\r\n}\r\nexport {\r\n    ListGroup,\r\n    Navi,\r\n    Foot,\r\n    Drop,\r\n};\r\n/*props\r\nprops.depth  : 0\r\nprops.ordered: false\r\nprops.start  : null\r\nprops.tight  :false\r\nprops?.children\r\n  - child (key=listItem)\r\n  - cilld ...\r\n    .props?.children\r\n      - child(key=text and so)\r\n*/\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nimport {MDBListGroupItem} from 'mdbreact';\r\nexport const ListItem:FC<BaseProps> = ({\r\n    children, className='', style={padding:\"0 50px\"}, ...props\r\n}) => {\r\n    type Colors = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\" | undefined\r\n    const colors= [\"primary\",\"secondary\",\"success\",\"danger\",\"warning\",\"info\",\"light\",\"dark\"]\r\n    const color = props.color && colors.some(c=>c===props.color)\r\n        ? props.color as Colors\r\n        : \"light\"\r\n    return <MDBListGroupItem {...{children, className, color, style}} />\r\n};\r\n","import React, {FC,useMemo,Children} from 'react';\r\nimport {HeadingProps} from '../types';\r\n//import {MDBTypography} from 'mdbreact'\r\nimport {TagTypes} from '../types'\r\nexport const Heading:FC<HeadingProps> = ({\r\n        level=1, /*responsive=true, */\r\n        children, className='', color=\"\", style={},\r\n    }) => {\r\n    const Tag = useMemo(()=>`h${level}` as TagTypes,[level])\r\n    return (\r\n        <div {...{color,style}}>\r\n        {Children.map(children,(c,key)=>{\r\n            return !(c as any)?.props?.children ? null :\r\n            <Tag {...{className,key}}>{(c as any)?.props?.children}</Tag>\r\n        })}\r\n        </div>\r\n    )\r\n    // ***\r\n    // *MDBTypegraphy Error\r\n    // *    DOC1: https://mdbootstrap.com/docs/jquery/content/typography/\r\n    // *    DOC2: https://mdbootstrap.com/docs/react/content/typography/\r\n    // *    Code: https://github.com/mdbootstrap/React-Bootstrap-with-Material-Design/blob/25ae803b9121efe64a02c5d9e4466cf6ea908a3f/src/components/Typography/Typography.js\r\n    // *Warning: Failed prop type:\r\n    // *   Invalid prop `children` of type `array` supplied to `a`,\r\n    // *   expected `boolean`.\r\n    // *Warning: Received `false` for a non-boolean attribute `abbr`.\r\n    // *   If you want to write it to the DOM,\r\n    // *   pass a string instead: abbr=\"false\" or abbr={value.toString()}.\r\n    // *   If you used to conditionally omit it with abbr={condition && value},\r\n    // *   pass abbr={condition ? value : undefined} instead.\r\n    // ***\r\n    /*\r\n    const tag = useMemo(()=>`h${level}` as TagTypes,[level])\r\n    const variant = useMemo(()=>\"responsive\" as VarTypes,[])\r\n    return <MDBTypography {...{\r\n        tag, variant, abbr:\"true\", //error if none\r\n        children, // warning\r\n        className, color, style}}/>\r\n    */\r\n};\r\n","import React, {FC,useCallback,useMemo} from \"react\";\r\nimport {CodeProps} from \"../../types\";\r\n//import {MDBTooltip} from 'mdbreact';\r\nconst {atomOneLight, atomOneDark} = require('react-syntax-highlighter/dist/esm/styles/hljs');\r\nconst {Light}        = require('react-syntax-highlighter')\r\n\r\nexport const Code:FC<CodeProps> = ({value=\"\", language=\"javascript\", inline=false,dark=false}) => {\r\n    //const [isCopied, setIsCopied] = useState(false);\r\n    const onDoubleClick = useCallback((_:any)=>navigator.clipboard.writeText(value),[value])\r\n    const customStyle = useMemo<React.CSSProperties>(() => ({\r\n        position:'relative', display:inline?\"inline-block\":\"fixed\",\r\n        ...(inline?{verticalAlign:\"top\",padding:\"0 0\"}:{})\r\n    }) ,  [ inline ] )\r\n    const style = useMemo(()=>dark?atomOneDark:atomOneLight, [dark])\r\n    return (\r\n        <Light PreTag={inline?\"span\":\"pre\"}\r\n            useInlineStyles={true} showLineNumbers={!inline}\r\n            {...{style, customStyle, onDoubleClick, language}}>{value}</Light>\r\n    );\r\n}\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nimport {Code} from './Code'\r\n\r\nexport const InlineCode:FC<BaseProps> = ({...props}) => {\r\n    return <Code {...props} inline/>\r\n}\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nconst MathJax = require('react-mathjax');\r\n\r\ninterface MathProps extends BaseProps {inline?:boolean,value?:string}\r\nexport const Math:FC<MathProps> = ({\r\n        inline=false, value='',\r\n        //children, className='', color='', style={} //TODO\r\n    }) => {\r\n    //const [isCopied, setIsCopied] = useState(false);\r\n    const handleCopy = (_:any)=> {\r\n    //    setIsCopied(true);\r\n        navigator.clipboard.writeText(value)\r\n    }\r\n    return (\r\n            <MathJax.Node inline={inline} formula={value}\r\n                onDoubleClick={handleCopy}/>\r\n    )\r\n}\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nimport {Math} from './Math'\r\n\r\nexport const InlineMath:FC<BaseProps> = ({...props}) => {\r\n    return <Math {...props} inline/>\r\n}\r\n","import React, {FC, useState, useEffect, useMemo} from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport {MdmdProps} from './types'\r\nimport * as Renderers from './components';\r\n//const {Provider} = require('react-mathjax');\r\n//const RemarkMathPlugin = require('remark-math');\r\n\r\nconst renderersKey  = Object.keys(Renderers)\r\nexport const Mdmd:FC<MdmdProps> = React.forwardRef(({\r\n    md=null, path=null, source='',\r\n    className=\"\", color=\"elegant\", style={fontSize:\"1rem\"},\r\n    children, ...props\r\n}, ref) => {\r\n    // ************************* FOR SOURCE ************************* //\r\n    const [nowSource, setSource] = useState(source);\r\n    useEffect(()=>{(path||md)&&fetch(path||md).then(r=>r.text()).then(r=>setSource(r)) }, [md,path])\r\n    useEffect(()=>{(source||children)&&setSource(source||String(children))}, [source,children])\r\n    // ************************* FOR PROPS ************************* //\r\n    const options = useMemo(()=>Object.assign({}, ...[\r\n        'escapeHtml','skipHtml','sourcePos','rawSourcePos','includeNodeIndex',\r\n        'allowedTypes','disallowedTypes','unwrapDisallowed','allowNode',\r\n        'linkTarget','transformLinkUri','transformImageUrl', ]\r\n        .filter(key => key in props).map(key => ({[key]:props[key]})),\r\n        props.options\r\n    ), [props]);\r\n    const renderers = useMemo(()=>Object.assign({},\r\n        ...renderersKey.map(key=>{\r\n            const Renderer  = (Renderers as any)[key];\r\n            return {[ key.charAt(0).toLowerCase()+key.slice(1) ] : (props:any) =>\r\n                <Renderer {...{...props,\r\n                    className: [ className, props[`className${key}`] ].filter(c=>c).join(' '),\r\n                    color    :     color || props[`color${key}`] ,\r\n                    style    : {...style,...props[`style${key}`]}, }}/>}\r\n        }), props.renderers\r\n    ), [className, color, style, props.renderers]);\r\n    // ************************* FOR RENDER ************************* //\r\n    return useMemo(()=>\r\n        <ReactMarkdown {...{\r\n            source:nowSource||'',...options,\r\n            renderers,/*plugins*/...(ref?{ref}:{})}} />\r\n    , [nowSource, renderers, options, ref])\r\n    /*\r\n    return (\r\n        <Provider input=\"tex\">\r\n            <ReactMarkdown {...{plugins, renderers, ...optionState, markdownRef, source:nowSource}} />\r\n        </Provider>\r\n    )\r\n    */\r\n});\r\n","import {ReactNode as RN, Children} from 'react'\r\n\r\n// ************************* 🎰 FOR TABLE 🎰 ************************* //\r\n// ************************* **************** ************************* //\r\nexport const getarr=(arr:any)=>arr?arr instanceof Array?arr:[arr]:[]\r\nexport const gettrs=(els:any[])=>[].concat(...(els.map(el=>getarr(el?.props?.children)) as never[]));\r\nexport const getths=(row:any  )=>getarr(row?.props?.children).map(el=>getarr(el?.props?.children));\r\nexport const getcol=(els:any[])=>els.map((c,i)=>({label:c, field:\"\"+i, sort:\"asc\", width:10}));\r\nexport const getrow=(els:any[])=>Object.assign( {},...els.map((c,i)=>({[\"\"+i]:c})) )\r\nexport const getkey=(els:any[])=>[].concat(...els.map(el=>el)).map((v:any)=>v.key);\r\nexport const getIsX=(els:any[],key:string)=>els.every(el=>el.label.every((c:any)=>getAnyCh(c.props,key).length) )\r\n\r\n// ************************* 📋 FOR LIST 📋 ************************* //\r\n// * grands : i want to know as g0 is btn? link? g0.child is ?\r\n// * i want know g0 have 'link' child and g0 have 'strong' grandchild.\r\n// ************************* ************** ************************* //\r\ntype GetAnyCh<T=any> = (children:T, key:string) => T[]\r\ntype GetAnyGr<T=any> = (children:T, k1:string, k2:string) => (T[])[]\r\nexport const getAnyCh:GetAnyCh=(children,key)=>getarr(children).filter(c=>c.key&&c.key.match(key))//[g0,..]or[]\r\nexport const getAnyGr:GetAnyGr=(children,k,l)=>getAnyCh(children,k).map(c=>getAnyCh(c?.props?.children,l)).filter(g=>g.length)\r\nexport const getText=(children:any)=>getarr(children).map(c=>c.key&&c.key.match('link')?c.props.children:c)\r\nexport const getLink=(children:any)=>getarr(children).map(c=>c.key&&c.key.match('link')?c.props.href:'#!').filter(n=>n)[0]||'#!'\r\n\r\n// ************************* 🤏 FOR GRID 🤏 ************************* //\r\n// ************************* *************** ************************* //\r\nexport const getGrid = (children:RN, depth=0) : any =>\r\n    getarr(children).map((child:any)=>\r\n        child?.key && !!child.key.match('blockquote') && !!child?.props?.children\r\n             ? getGrid(child.props.children, depth+1)\r\n             : child\r\n    )\r\nexport const getLevel = (children:RN) : number => {\r\n    if (!children) return 0\r\n    const keys = Children.toArray(children).map((c:any)=>c?.key).filter((k:any)=>k) as string[]\r\n//  const is_w= keys.every(key=>key.match('delete'))     //put by delete     ~~e.g.~~ //TODO\r\n    const is_1 = keys.every(key=>key.match('emphasis'))  //put by 1 underbar  _e.g._\r\n    const is_2 = keys.every(key=>key.match('strong'))    //put by 2 underbar __e.g.__\r\n    const is_3 = [].concat(...getarr(children).map(el=>  //put by 3 underbar___e.g.___\r\n        el.props.children instanceof Array?Children.map(el.props.children,e=>e.key):[]\r\n    )).every((key:string)=>key.match('emphasis'));\r\n    return is_3?3:is_2?2:is_1?1:0\r\n}\r\n","import {Mdmd} from './Mdmd'\nexport default Mdmd\nexport * from './Mdmd';\nexport * from './components';\nexport * from './hooks'\nexport * from './types'\nexport * from './utils'\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Fragment,useRef,useState,useEffect,useCallback,useMemo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AceEditor from 'react-ace';\r\nimport {\r\n    MDBContainer, MDBFreeBird, MDBEdgeHeader, MDBIcon, MDBBtn,\r\n    MDBModal, MDBModalBody, MDBModalHeader, /*MDBModalFooter*/} from \"mdbreact\";\r\nimport {useGrid} from 'use-grid'\r\nimport {Mdmd, buttonColor} from \"../src\"; //develop&test\r\nimport * as Pages from './pages';\r\nimport \"ace-builds/src-noconflict/mode-markdown\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\nconst INITIALDOCSPAGE = \"Grid\";\r\nconst pagesKey  = Object.keys(Pages);\r\nconst WIDTH = 15;\r\n/*---------- context ----------*/\r\n\r\nconst Root = (props:any) => { //customize node for Mdmd.props.renderers\r\n    const style = {\r\n        backgroundImage:\"url('https://mdbootstrap.com/wp-content/uploads/2016/12/big-bundle1.jpg')\",\r\n        backgroundColor:\"#123456\", backgroundPosition:\"center center\", backgroundSize:\"cover\",\r\n        filter:\"blur(3px) opacity(.3) drop-shadow(5px -25px 50px black) hue-rotate(-90deg) \",}\r\n    return (\r\n        <main>\r\n            <MDBEdgeHeader style={style} />\r\n            <MDBFreeBird>\r\n                <MDBContainer {...props}>\r\n                    {props.children}\r\n                </MDBContainer>\r\n            </MDBFreeBird>\r\n        </main>\r\n    )\r\n}\r\nconst Modal = (props:any) => {\r\n    const {setColor,page,setPage,isOpen,setIsOpen,} = props;\r\n    const colors = [\"danger\",\"warning\",\"success\",\"info\",\"default\",\"primary\",\r\n                    \"secondary\",\"elegant\",\"stylish\",\"unique\",\"special\",];\r\n    return (\r\n        <MDBModal isOpen={isOpen} toggle={()=>setIsOpen(false)} fullHeight position=\"right\">\r\n            <MDBModalHeader toggle={()=>setIsOpen(false)}>MDMD Setting</MDBModalHeader>\r\n            <MDBModalBody>\r\n                    <h3>Color</h3>\r\n                    <Fragment>\r\n                        {colors.map((color,i)=>\r\n                            <MDBBtn key={i} color={color as buttonColor}\r\n                            onClick={()=>setColor(color+\"-color\")}>{color}</MDBBtn>)}\r\n                    </Fragment>\r\n                    <h3>Pages</h3>\r\n                    <Fragment>\r\n                        {pagesKey.map((p,i)=>\r\n                            <MDBBtn key={i} color={page===p?props.color.replace(\"-color\",\"\"):null}\r\n                                onClick={()=>setPage(p)}>{p}</MDBBtn>)}\r\n                    </Fragment>\r\n            </MDBModalBody>\r\n        </MDBModal>\r\n    )\r\n}\r\nexport const Demo = (props:any) => {\r\n    /******************** for mdmd props ********************/\r\n    const leftRef = useRef<React.LegacyRef<HTMLDivElement>>();//createRef\r\n    const aceEditorRef = useRef(null);\r\n    const separatorXRef = useRef(null);\r\n    const [fontSize] = useGrid({md:50, lg:75})\r\n    const [page, setPage] = useState(INITIALDOCSPAGE);\r\n    const [color, setColor] = useState(props.color);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    /******************** for docs pages ********************/\r\n    useEffect(()=>{\r\n        fetch(Pages[page]).then(res=>res.text()).then(res=>{\r\n            setAceValue(res);\r\n            setSource(res);\r\n        });\r\n    }, [page])\r\n    /******************** for should update ********************/\r\n    const [source, setSource] = useState(props.source);//for Mdmd props.source\r\n    const [aceValue, setAceValue] = useState(props.source);\r\n    const [isChanged, setIsChanged] = useState(false);\r\n    useEffect(()=>{\r\n        const interval = setInterval(()=>{\r\n            if (isChanged) {\r\n                setIsChanged(false)\r\n                setSource(aceValue)\r\n            }\r\n        },1000);\r\n        return ()=>clearInterval(interval);\r\n    })\r\n    /******************** for split window ********************/\r\n    const [width, setWidth] = useState(WIDTH);\r\n    useEffect(() => {\r\n        if (!width)\r\n            return setWidth(leftRef.current.clientWidth);\r\n        leftRef.current.style.width = `${width}px`;\r\n        setTimeout(()=>\r\n            aceEditorRef.current && aceEditorRef.current.editor.resize()\r\n        ,1000)\r\n    }, [width, leftRef]);\r\n    const separatorMouseMove =useCallback(e=>{\r\n        if (!separatorXRef.current)\r\n            return;\r\n        const newwidth = width+e.clientX-separatorXRef.current;\r\n        separatorXRef.current = e.clientX;\r\n        setWidth(newwidth);\r\n    }, [width] )\r\n    /******************** styles ********************/\r\n    const styles = useMemo<React.CSSProperties[]>(() => ([\r\n      { width:fontSize,height:fontSize,bottom:fontSize/4,borderRadius:fontSize,\r\n        transition:\"0.75s\",position:\"fixed\",padding:0,fontSize },\r\n      { transform:`rotate(${width<WIDTH*2?\"-18\":\"\"}0deg)`,left:width+fontSize*(width<WIDTH*2?1/4:-2) },\r\n      { transform:`rotate(${isOpen?\"90\":\"0\"}deg)`,right:fontSize/4 },\r\n    ]),[isOpen, width, fontSize])\r\n    const iconStyle = useMemo(()=>({\r\n        position:\"absolute\",textAlign:\"center\",top:0,bottom:0,left:0,right:0\r\n    }), [])\r\n    const sepaStyle = useMemo(()=>({\r\n        transition:\"0.75s\",display:\"table-cell\",backgroundColor:\"#E8E8E8\",width:WIDTH+\"px\"\r\n    }), [])\r\n    /******************** peformance tuning ********************/\r\n    const stateMdmd = useMemo(()=>({color, renderers:{root:Root}}), [color]);\r\n    const stateAce = useMemo(()=>({\r\n        value:aceValue,onChange:(value:any)=>{setAceValue(value);setIsChanged(true)},\r\n        width:\"100%\",ref:aceEditorRef,editorProps:{$blockScrolling:false},\r\n        height:\"100%\",name:\"UNIQUE_ID_OF_DIV\",mode:\"markdown\",theme:\"github\",\r\n    }),[aceValue]);\r\n    const onMouseDown = useCallback(e=>{separatorXRef.current=e.clientX},[])\r\n    const onMouseMove = useCallback(e=>separatorMouseMove(e), [separatorMouseMove])\r\n    const onMouseUp   = useCallback(()=>{separatorXRef.current=null}, [])\r\n    /******************** render ********************/\r\n    return (\r\n        <div {...{onMouseMove,onMouseUp}} style={{display:\"table\",width:\"100%\",flexDirection:\"column\"}}>\r\n            <div ref={leftRef} style={{transition:\".5s\",display:\"table-cell\",overflow:\"hidden\"}}>\r\n                <MDBContainer  style={{transition:\".75s\",position:\"fixed\",padding:0,width,height:\"100%\"}}>\r\n                    {useMemo(()=><AceEditor {...stateAce}/>,[stateAce])}\r\n                </MDBContainer>\r\n            </div>\r\n            { useMemo(()=><>\r\n            <div {...{onMouseDown}} style={sepaStyle}/>\r\n            <div {...{onMouseDown}} style={{width:\"auto\",overflow:\"hidden\"}}>\r\n                <Mdmd source={source} {...stateMdmd}/>\r\n            </div>\r\n            </>,[onMouseDown,sepaStyle,source,stateMdmd]) }\r\n            <MDBBtn style={{...styles[0],...styles[1]}}\r\n                color={color.replace('-color','')}\r\n                onClick={()=>setWidth(width<WIDTH*2?window.innerWidth/3:WIDTH)}>\r\n                { useMemo(()=><MDBIcon icon=\"angle-left\" style={iconStyle}/>,[iconStyle]) }\r\n            </MDBBtn>\r\n            <MDBBtn style={{...styles[0],...styles[2]}}\r\n                color={color.replace('-color','')}\r\n                onClick={()=>setIsOpen(!isOpen)}>\r\n                { useMemo(()=><MDBIcon icon=\"ellipsis-v\" style={iconStyle}/>,[iconStyle]) }\r\n            </MDBBtn>\r\n            { useMemo(()=>\r\n                <Modal {...{color,setColor,page,setPage,isOpen,setIsOpen}}/>\r\n            ,[color,setColor,page,setPage,isOpen,setIsOpen]) }\r\n        </div>\r\n    )\r\n}\r\n\r\nDemo.propTypes = {\r\n    /*----------main----------*/\r\n    source   :PropTypes.string,\r\n    renderers:PropTypes.object,\r\n    /*----------sub----------*/\r\n    className :PropTypes.string,\r\n    color     :PropTypes.string,\r\n    style     :PropTypes.object,\r\n};\r\n\r\nDemo.defaultProps = {\r\n    /*----------main----------*/\r\n    path     :null,\r\n    color    :'elegant',\r\n    source   :''  ,\r\n};\r\n\r\nexport default Demo;\r\n","import React, {useMemo} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport {MDBEdgeHeader,MDBFreeBird,MDBContainer} from 'mdbreact';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Mdmd from \"../src\";  //develop&test\r\nimport {Demo} from './Demo';\r\nimport * as Pages from './pages';\r\n\r\n// MDBReact:Import style files into the src/index.js before the App.js file:\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nconst RootCustom = (props:any) => {\r\n    const style = useMemo(()=>({\r\n        backgroundImage:\"url('https://mdbootstrap.com/wp-content/uploads/2016/12/big-bundle1.jpg')\",\r\n        backgroundColor:\"#123456\",\r\n        backgroundPosition:\"center center\",\r\n        backgroundSize:\"cover\",\r\n        filter:\"blur(3px) opacity(.3) drop-shadow(5px -25px 50px blue) hue-rotate(-90deg) \",\r\n    }),[])\r\n    return (\r\n        <main>\r\n            <MDBEdgeHeader style={style} />\r\n            <MDBFreeBird>\r\n                <MDBContainer {...props}>\r\n                    {props.children}\r\n                </MDBContainer>\r\n            </MDBFreeBird>\r\n        </main>\r\n    )\r\n}\r\nexport const App =()=> (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            { Object.keys(Pages).map((key)=>\r\n                <Route key={key} exact path={'/mdmd/'+key}>\r\n                    <Mdmd md={Pages[key]}\r\n                        styleRoot={{padding:\"500px\"}}\r\n                        renderers={{root: RootCustom}} />\r\n                </Route>\r\n            ) }\r\n            <Route component={Demo}/>\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/About.05374727.md\";","module.exports = __webpack_public_path__ + \"static/media/Basic.faa17e22.md\";","module.exports = __webpack_public_path__ + \"static/media/Component.6c791648.md\";","module.exports = __webpack_public_path__ + \"static/media/Container.ed6be2c2.md\";","module.exports = __webpack_public_path__ + \"static/media/Content.af91ca3e.md\";","module.exports = __webpack_public_path__ + \"static/media/Grid.8d3f1f49.md\";","module.exports = __webpack_public_path__ + \"static/media/Help.5aecf85a.md\";","module.exports = __webpack_public_path__ + \"static/media/How.b77fae6b.md\";","module.exports = __webpack_public_path__ + \"static/media/Test.f44e1c49.md\";"],"sourceRoot":""}